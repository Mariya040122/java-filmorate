ALTER TABLE IF EXISTS PUBLIC.LIKES DROP CONSTRAINT IF EXISTS LIKES_FK;
ALTER TABLE IF EXISTS PUBLIC.LIKES DROP CONSTRAINT IF EXISTS LIKES_FK_1;
DROP INDEX IF EXISTS LIKES_FK_1_INDEX_4;
DROP INDEX IF EXISTS LIKES_FK_INDEX_4;
DROP INDEX IF EXISTS PRIMARY_KEY_46;
DROP TABLE IF EXISTS PUBLIC.LIKES;

ALTER TABLE IF EXISTS PUBLIC.GENREFILM DROP CONSTRAINT IF EXISTS GENREFILM_FK_1;
DROP INDEX IF EXISTS GENREFILM_FK_1_INDEX_C;
DROP INDEX IF EXISTS GENREFILM_FK_INDEX_D;
DROP INDEX IF EXISTS PRIMARY_KEY_D3;
DROP TABLE IF EXISTS PUBLIC.GENREFILM;

ALTER TABLE IF EXISTS PUBLIC.FILM DROP CONSTRAINT IF EXISTS FILM_FK;
DROP INDEX IF EXISTS PRIMARY_KEY_E;
DROP INDEX IF EXISTS FILM_FK_INDEX_2;
DROP TABLE IF EXISTS PUBLIC.FILM;

DROP INDEX IF EXISTS PRIMARY_KEY_9D;
DROP TABLE IF EXISTS PUBLIC.RATINGS;

DROP INDEX IF EXISTS PRIMARY_KEY_4;
DROP TABLE IF EXISTS PUBLIC.GENRE;

ALTER TABLE IF EXISTS PUBLIC.FRIENDS DROP CONSTRAINT IF EXISTS USERID_FK;
ALTER TABLE IF EXISTS PUBLIC.FRIENDS DROP CONSTRAINT IF EXISTS USERID_FK_1;
DROP INDEX IF EXISTS PRIMARY_KEY_97;
DROP INDEX IF EXISTS USERID_FK_INDEX_9;
DROP INDEX IF EXISTS USERID_FK_1_INDEX_9;
DROP TABLE IF EXISTS PUBLIC.FRIENDS;

DROP INDEX IF EXISTS PRIMARY_KEY_28;
DROP TABLE IF EXISTS PUBLIC."USER";

-- PUBLIC.RATINGS definition

CREATE TABLE PUBLIC.RATINGS (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	CONSTRAINT RATINGS_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_9D ON PUBLIC.RATINGS (ID);

-- PUBLIC.GENRE definition

CREATE TABLE PUBLIC.GENRE (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_4 ON PUBLIC.GENRE (ID);

-- PUBLIC.FILM definition

CREATE TABLE PUBLIC.FILM (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	DESCRIPTION CHARACTER VARYING,
	RELEASEDATE DATE,
	DURATION BIGINT,
	MPA BIGINT,
--	CONSTRAINT FILM_FK PRIMARY KEY (ID,MPA),
	CONSTRAINT FILM_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_FK FOREIGN KEY (MPA) REFERENCES PUBLIC.RATINGS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX IF NOT EXISTS FILM_FK_INDEX_2 ON PUBLIC.FILM (MPA);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_E ON PUBLIC.FILM (ID);

-- PUBLIC.GENREFILM definition

CREATE TABLE PUBLIC.GENREFILM (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT,
	GENRE_ID BIGINT,
	--CONSTRAINT GENREFILM_FK PRIMARY KEY (ID,FILM_ID),
	--CONSTRAINT GENREFILM_FK_1 PRIMARY KEY (ID,GENRE_ID),
	CONSTRAINT GENREFILM_PK PRIMARY KEY (ID),
	CONSTRAINT GENREFILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT GENREFILM_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX IF NOT EXISTS GENREFILM_FK_1_INDEX_C ON PUBLIC.GENREFILM (GENRE_ID);
CREATE INDEX IF NOT EXISTS GENREFILM_FK_INDEX_D ON PUBLIC.GENREFILM (FILM_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_D3 ON PUBLIC.GENREFILM (ID);

-- PUBLIC."USER" definition

CREATE TABLE PUBLIC."USER" (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING,
	LOGIN CHARACTER VARYING,
	NAME CHARACTER VARYING,
	BIRTHDAY DATE,
	CONSTRAINT USER_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_28 ON PUBLIC."USER" (ID);

-- PUBLIC.FRIENDS definition

CREATE TABLE PUBLIC.FRIENDS (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	USERID BIGINT,
	FRIENDID BIGINT,
	STATUS BOOLEAN,
	--CONSTRAINT USERID_FK PRIMARY KEY (ID,USERID),
	--CONSTRAINT USERID_FK_1 PRIMARY KEY (ID,FRIENDID),
	CONSTRAINT USERID_PK PRIMARY KEY (ID),
	CONSTRAINT USERID_FK FOREIGN KEY (USERID) REFERENCES PUBLIC."USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT USERID_FK_1 FOREIGN KEY (FRIENDID) REFERENCES PUBLIC."USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_97 ON PUBLIC.FRIENDS (ID);
CREATE INDEX IF NOT EXISTS USERID_FK_1_INDEX_9 ON PUBLIC.FRIENDS (FRIENDID);
CREATE INDEX IF NOT EXISTS USERID_FK_INDEX_9 ON PUBLIC.FRIENDS (USERID);

-- PUBLIC.LIKES definition

CREATE TABLE PUBLIC.LIKES (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT,
	USER_ID BIGINT,
	--CONSTRAINT LIKES_FK PRIMARY KEY (ID,FILM_ID),
	--CONSTRAINT LIKES_FK_1 PRIMARY KEY (ID,USER_ID),
	CONSTRAINT LIKES_PK PRIMARY KEY (ID),
	CONSTRAINT LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT LIKES_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX IF NOT EXISTS LIKES_FK_1_INDEX_4 ON PUBLIC.LIKES (USER_ID);
CREATE INDEX IF NOT EXISTS LIKES_FK_INDEX_4 ON PUBLIC.LIKES (FILM_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_46 ON PUBLIC.LIKES (ID);
